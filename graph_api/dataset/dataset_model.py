from typing import Optional, Any, List
from pydantic import BaseModel


class DatasetIn(BaseModel):
    """
        Model of dataset to acquire from client

        Attributes:
            name_hash (str): Name of the dataset generated by the system (random string)
            name_by_user: (Optional[str]): Name of the dataset given by user
    """

    name_hash: str = None
    name_by_user: Optional[str] = None


class BasicDatasetOut(BaseModel):
    """
        Model of dataset

        Attributes:
            name_hash (str): Name of the dataset generated by the system (random string)
    """

    name_hash: str = None


class DatasetOut(BasicDatasetOut):
    """
        Model of dataset to send to client as a result of request

        Attributes:
            name_by_user: (Optional[str]): Name of the dataset given by user
            errors (Optional[Any]): Optional errors appeared during query executions
            links (Optional[list): Hateoas implementation
    """

    name_by_user: Optional[str] = None
    errors: Optional[Any] = None
    links: Optional[list] = None


class DatasetsOut(BaseModel):
    """
    Model of list of datasets

    Attributes:
        datasets (Optional[List[BasicDatasetOut]]): List of datasets to send
        errors (Optional[Any]): Optional errors appeared during query executions
        links (Optional[list): Hateoas implementation
    """
    datasets: Optional[List[BasicDatasetOut]] = None
    errors: Optional[Any] = None
    links: Optional[List] = None
